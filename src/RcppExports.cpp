// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// matsp
List matsp(arma::mat G);
RcppExport SEXP _STAAR_matsp(SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(matsp(G));
    return rcpp_result_gen;
END_RCPP
}
// matrix_flip
List matrix_flip(arma::mat G);
RcppExport SEXP _STAAR_matrix_flip(SEXP GSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type G(GSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_flip(G));
    return rcpp_result_gen;
END_RCPP
}
// STAAR_O
arma::vec STAAR_O(arma::sp_mat G, arma::mat X, arma::vec working, double sigma, int fam, arma::vec residuals, arma::mat weights_B, arma::mat weights_S, arma::mat weights_A, arma::vec mac, int mac_thres);
RcppExport SEXP _STAAR_STAAR_O(SEXP GSEXP, SEXP XSEXP, SEXP workingSEXP, SEXP sigmaSEXP, SEXP famSEXP, SEXP residualsSEXP, SEXP weights_BSEXP, SEXP weights_SSEXP, SEXP weights_ASEXP, SEXP macSEXP, SEXP mac_thresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type working(workingSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type fam(famSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type residuals(residualsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_B(weights_BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_S(weights_SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_A(weights_ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mac(macSEXP);
    Rcpp::traits::input_parameter< int >::type mac_thres(mac_thresSEXP);
    rcpp_result_gen = Rcpp::wrap(STAAR_O(G, X, working, sigma, fam, residuals, weights_B, weights_S, weights_A, mac, mac_thres));
    return rcpp_result_gen;
END_RCPP
}
// STAAR_O_SMMAT
arma::vec STAAR_O_SMMAT(arma::sp_mat G, arma::mat P, arma::vec residuals, arma::mat weights_B, arma::mat weights_S, arma::mat weights_A, arma::vec mac, int mac_thres);
RcppExport SEXP _STAAR_STAAR_O_SMMAT(SEXP GSEXP, SEXP PSEXP, SEXP residualsSEXP, SEXP weights_BSEXP, SEXP weights_SSEXP, SEXP weights_ASEXP, SEXP macSEXP, SEXP mac_thresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type residuals(residualsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_B(weights_BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_S(weights_SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_A(weights_ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mac(macSEXP);
    Rcpp::traits::input_parameter< int >::type mac_thres(mac_thresSEXP);
    rcpp_result_gen = Rcpp::wrap(STAAR_O_SMMAT(G, P, residuals, weights_B, weights_S, weights_A, mac, mac_thres));
    return rcpp_result_gen;
END_RCPP
}
// STAAR_O_SMMAT_sparse
arma::vec STAAR_O_SMMAT_sparse(arma::sp_mat G, arma::sp_mat Sigma_i, arma::mat Sigma_iX, arma::mat cov, arma::vec residuals, arma::mat weights_B, arma::mat weights_S, arma::mat weights_A, arma::vec mac, int mac_thres);
RcppExport SEXP _STAAR_STAAR_O_SMMAT_sparse(SEXP GSEXP, SEXP Sigma_iSEXP, SEXP Sigma_iXSEXP, SEXP covSEXP, SEXP residualsSEXP, SEXP weights_BSEXP, SEXP weights_SSEXP, SEXP weights_ASEXP, SEXP macSEXP, SEXP mac_thresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type Sigma_i(Sigma_iSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_iX(Sigma_iXSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cov(covSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type residuals(residualsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_B(weights_BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_S(weights_SSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type weights_A(weights_ASEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mac(macSEXP);
    Rcpp::traits::input_parameter< int >::type mac_thres(mac_thresSEXP);
    rcpp_result_gen = Rcpp::wrap(STAAR_O_SMMAT_sparse(G, Sigma_i, Sigma_iX, cov, residuals, weights_B, weights_S, weights_A, mac, mac_thres));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_STAAR_matsp", (DL_FUNC) &_STAAR_matsp, 1},
    {"_STAAR_matrix_flip", (DL_FUNC) &_STAAR_matrix_flip, 1},
    {"_STAAR_STAAR_O", (DL_FUNC) &_STAAR_STAAR_O, 11},
    {"_STAAR_STAAR_O_SMMAT", (DL_FUNC) &_STAAR_STAAR_O_SMMAT, 8},
    {"_STAAR_STAAR_O_SMMAT_sparse", (DL_FUNC) &_STAAR_STAAR_O_SMMAT_sparse, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_STAAR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
